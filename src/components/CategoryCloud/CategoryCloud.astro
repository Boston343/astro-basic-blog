---
import { getCollection, CollectionEntry } from "astro:content";

// utils import
import { formatBlogPosts, slugify } from "../../js/utils";

// const allPosts = await Astro.glob("../../pages/blog/*.md");
const allPosts = await getCollection("blog");
const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts, {
  filterOutDrafts: true,
  filterOutFuturePosts: true,
  sortByDate: true,
  limit: undefined,
});
const allCategories = formattedPosts.map((cat) => cat.data.category).flat();

const processedCategories = allCategories.reduce((acc, category) => {
  // check if the category exists in the acc
  const value = acc[category] || 0;

  return {
    ...acc,
    [category]: value + 1,
  };
}, {});

interface Props {
  showCount?: boolean;
}

const { showCount } = Astro.props as Props;

// console.log(processedCategories);
---

<ul class="categories">
  {
    Object.entries(processedCategories).map(([key, val]) => (
      <li>
        <a href={`/category/${slugify(key)}/`} class="badge">
          {key} {showCount && `(${val})`}
        </a>
      </li>
    ))
  }
</ul>
